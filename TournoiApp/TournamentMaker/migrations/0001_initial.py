# Generated by Django 5.2.1 on 2025-06-03 17:49

import datetime
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Ranking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('department', models.CharField(max_length=100)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('is_indoor', models.BooleanField(default=True)),
                ('start_date', models.DateField(default=datetime.date.today)),
                ('end_date', models.DateField(default=datetime.date.today)),
                ('sport', models.CharField(default='Football', max_length=50)),
                ('max_teams', models.PositiveIntegerField(default=8)),
                ('players_per_team', models.PositiveIntegerField(default=5)),
            ],
        ),
        migrations.CreateModel(
            name='FinalRankingProxy',
            fields=[
            ],
            options={
                'verbose_name': 'Ranking Final',
                'verbose_name_plural': 'Ranking Final',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('TournamentMaker.ranking',),
        ),
        migrations.AddField(
            model_name='ranking',
            name='team',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='TournamentMaker.team'),
        ),
        migrations.CreateModel(
            name='Pool',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('max_size', models.PositiveIntegerField(default=4)),
                ('teams', models.ManyToManyField(blank=True, related_name='pools', to='TournamentMaker.team')),
                ('tournament', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pools', to='TournamentMaker.tournament')),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('level', models.CharField(choices=[(1, 'Débutant'), (2, 'Intermédiaire'), (3, 'Avancé'), (4, 'Expert'), (5, 'Maître')], max_length=1)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='players', to='TournamentMaker.team')),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.TimeField(blank=True, null=True, verbose_name='Heure de début')),
                ('end_time', models.TimeField(blank=True, null=True, verbose_name='Heure de fin')),
                ('statut', models.CharField(choices=[('ND', 'Non débuté'), ('EC', 'En cours'), ('T', 'Terminé')], default='ND', max_length=2)),
                ('terrain_number', models.CharField(blank=True, choices=[('1', 'Terrain 1'), ('2', 'Terrain 2'), ('3', 'Terrain 3'), ('4', 'Terrain 4'), ('5', 'Terrain 5'), ('6', 'Terrain 6')], max_length=1, null=True, verbose_name='Terrain')),
                ('winner_side', models.CharField(blank=True, choices=[('A', 'Team A'), ('B', 'Team B')], max_length=1, null=True, verbose_name='Vainqueur')),
                ('set1_team_a', models.PositiveIntegerField(default=0)),
                ('set1_team_b', models.PositiveIntegerField(default=0)),
                ('set2_team_a', models.PositiveIntegerField(default=0)),
                ('set2_team_b', models.PositiveIntegerField(default=0)),
                ('set3_team_a', models.PositiveIntegerField(default=0)),
                ('set3_team_b', models.PositiveIntegerField(default=0)),
                ('set4_team_a', models.PositiveIntegerField(blank=True, null=True)),
                ('set4_team_b', models.PositiveIntegerField(blank=True, null=True)),
                ('set5_team_a', models.PositiveIntegerField(blank=True, null=True)),
                ('set5_team_b', models.PositiveIntegerField(blank=True, null=True)),
                ('phase', models.CharField(choices=[('pool', 'Phase de poule'), ('quarter', 'Quart de finale'), ('semi', 'Demi-finale'), ('final', 'Finale'), ('third_place', 'Petite finale')], default='pool', max_length=20)),
                ('pool', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='matches', to='TournamentMaker.pool')),
                ('team_a', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches_as_team_a', to='TournamentMaker.team')),
                ('team_b', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches_as_team_b', to='TournamentMaker.team')),
            ],
        ),
        migrations.AddField(
            model_name='team',
            name='tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teams', to='TournamentMaker.tournament'),
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField(choices=[(1, 'Débutant'), (2, 'Intermédiaire'), (3, 'Avancé'), (4, 'Expert'), (5, 'Maître')])),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='TournamentMaker.team')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='team',
            name='captain',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='captained_team', to='TournamentMaker.userprofile'),
        ),
    ]
